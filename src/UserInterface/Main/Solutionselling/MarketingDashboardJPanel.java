/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Main.Solutionselling;

import MarketAnalytics.MarketChannelSummary;
import TheBusiness.Business.Business;
import TheBusiness.CustomerManagement.CustomerProfile;
import TheBusiness.MarketModel.Channel;
import TheBusiness.MarketModel.Market;
import TheBusiness.MarketModel.MarketChannelAssignment;
import TheBusiness.MarketModel.SolutionOffer;
import TheBusiness.SalesManagement.SalesPersonProfile;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tirdesh
 */
public class MarketingDashboardJPanel extends javax.swing.JPanel {

    javax.swing.JPanel CardSequencePanel;
    Business business;
    MarketChannelSummary mcs;

    /**
     * Creates new form ProfessorStatAreaJPanel
     */
    public MarketingDashboardJPanel(Business b, JPanel clp) {

        business = b;
        this.CardSequencePanel = clp;
        initComponents();
        ArrayList<MarketChannelAssignment> termYears = business.getMarketChannelComboCatalog().getMcalist();
        String[] mcaStrings = termYears.stream().map(MarketChannelAssignment::toString).toArray(String[]::new);
        // Create a DefaultComboBoxModel using the list
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(mcaStrings);
        // Set the model for your JComboBox
        jComboBoxMCASelector.setModel(model);
        String selectedTerm = (String) jComboBoxMCASelector.getSelectedItem();
        Market marketString = business.getMarketCatalog().findMarket(selectedTerm.split("_")[0]);
        Channel channelString = business.getChannelCatalog().findChannel(selectedTerm.split("_")[1]);
        MarketChannelAssignment mca = business.getMarketChannelComboCatalog().finMarketChannelCombo(marketString, channelString);
        mcs = new MarketChannelSummary(b, mca);
        updateDashboard(mca);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelWelcome = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelEducators = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTopCust = new javax.swing.JTable();
        jComboBoxMCASelector = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableTopSales = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableTopSolOffers = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();

        jLabelWelcome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelWelcome.setForeground(new java.awt.Color(96, 83, 150));
        jLabelWelcome.setText("Marketing Dashboard");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabelEducators.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelEducators.setForeground(new java.awt.Color(96, 83, 150));
        jLabelEducators.setText("500");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(96, 83, 150));
        jLabel6.setText("Total");

        jPanel11.setBackground(new java.awt.Color(232, 201, 232));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEducators, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabelEducators, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane1.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTableTopCust.setBackground(new java.awt.Color(247, 247, 247));
        jTableTopCust.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTableTopCust.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "Allan", "XLS"},
                {null, "Brian", "React"},
                {null, "Romeo", "C#"},
                {null, "Alex", "C++ "},
                {null, null, null}
            },
            new String [] {
                "Rank", "Customer", "Revenue"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableTopCust.setGridColor(new java.awt.Color(247, 247, 247));
        jTableTopCust.setSelectionBackground(new java.awt.Color(96, 83, 150));
        jScrollPane1.setViewportView(jTableTopCust);

        jComboBoxMCASelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxMCASelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMCASelectorActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(96, 83, 150));
        jLabel8.setText("Top 3 Customers");

        jScrollPane2.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTableTopSales.setBackground(new java.awt.Color(247, 247, 247));
        jTableTopSales.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTableTopSales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "Allan", "XLS"},
                {null, "Brian", "React"},
                {null, "Romeo", "C#"},
                {null, "Alex", "C++ "},
                {null, null, null}
            },
            new String [] {
                "Rank", "Sales Person", "Revenue"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableTopSales.setGridColor(new java.awt.Color(247, 247, 247));
        jTableTopSales.setSelectionBackground(new java.awt.Color(96, 83, 150));
        jScrollPane2.setViewportView(jTableTopSales);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(96, 83, 150));
        jLabel9.setText("Top 3 Sales People");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(96, 83, 150));
        jLabel14.setText("Top Performing Solution Offers");

        jScrollPane3.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTableTopSolOffers.setBackground(new java.awt.Color(247, 247, 247));
        jTableTopSolOffers.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTableTopSolOffers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "Allan", "XLS"},
                {null, "Brian", "React"},
                {null, "Romeo", "C#"},
                {null, "Alex", "C++ "},
                {null, null, null}
            },
            new String [] {
                "Rank", "Solution Offer", "Revenue"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableTopSolOffers.setGridColor(new java.awt.Color(247, 247, 247));
        jTableTopSolOffers.setSelectionBackground(new java.awt.Color(96, 83, 150));
        jScrollPane3.setViewportView(jTableTopSolOffers);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(96, 83, 150));
        jLabel12.setText("Solution Offerings");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(jComboBoxMCASelector, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMCASelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(415, 415, 415))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxMCASelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMCASelectorActionPerformed
        // TODO add your handling code here:
        // Get the selected term and year from the combo box
        String selectedTerm = (String) jComboBoxMCASelector.getSelectedItem();
        Market marketString = business.getMarketCatalog().findMarket(selectedTerm.split("_")[0]);
        Channel channelString = business.getChannelCatalog().findChannel(selectedTerm.split("_")[1]);
        MarketChannelAssignment mca = business.getMarketChannelComboCatalog().finMarketChannelCombo(marketString, channelString);

        updateDashboard(mca);
    }//GEN-LAST:event_jComboBoxMCASelectorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxMCASelector;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelEducators;
    private javax.swing.JLabel jLabelWelcome;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableTopCust;
    private javax.swing.JTable jTableTopSales;
    private javax.swing.JTable jTableTopSolOffers;
    // End of variables declaration//GEN-END:variables

    private void updateDashboard(MarketChannelAssignment mca) {
        // Update your UI components with the relevant information based on the selected MarketChannelAssignment
        // For example, you can update JLabels, JTables, or any other components as needed.
        int totalSolutionOrders = mcs.getTotalSolutionOrdersForMCA(mca);
        jLabelEducators.setText(String.valueOf(totalSolutionOrders));
        // Displaying top 3 negotiated solutions
        List<Map.Entry<SolutionOffer, Integer>> top3Solutions = mcs.top3NegotiatedSolutionsForMCA(mca);
        displayTop3Solutions(top3Solutions);

        // Displaying top 3 customers
        List<Map.Entry<CustomerProfile, Integer>> top3Customers = mcs.top3CustomersByMCA(mca);
        displayTop3Customers(top3Customers);

        // Displaying top 3 salespeople
        List<Map.Entry<SalesPersonProfile, Integer>> top3Salespeople = mcs.top3SalesPeopleByMCA(mca);
        displayTop3Salespeople(top3Salespeople);
    }

    private void displayTop3Solutions(List<Map.Entry<SolutionOffer, Integer>> top3Solutions) {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Rank");
        model.addColumn("Solution Offer");
        model.addColumn("Revenue");

        for (int i = 0; i < Math.min(top3Solutions.size(), 3); i++) {
            Map.Entry<SolutionOffer, Integer> entry = top3Solutions.get(i);
            SolutionOffer solutionOffer = entry.getKey();
            int revenue = entry.getValue();

            Object[] rowData = {(i + 1), solutionOffer.toString(), revenue};
            model.addRow(rowData);
        }

        jTableTopSolOffers.setModel(model);
    }

    private void displayTop3Customers(List<Map.Entry<CustomerProfile, Integer>> top3Customers) {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Rank");
        model.addColumn("Customer");
        model.addColumn("Total Revenue");

        for (int i = 0; i < Math.min(top3Customers.size(), 3); i++) {
            Map.Entry<CustomerProfile, Integer> entry = top3Customers.get(i);
            CustomerProfile customer = entry.getKey();
            int revenue = entry.getValue();

            Object[] rowData = {(i + 1), customer.toString(), revenue};
            model.addRow(rowData);
        }

        jTableTopCust.setModel(model);
    }

    private void displayTop3Salespeople(List<Map.Entry<SalesPersonProfile, Integer>> top3Salespeople) {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Rank");
        model.addColumn("Salesperson");
        model.addColumn("Total Revenue");

        for (int i = 0; i < Math.min(top3Salespeople.size(), 3); i++) {
            Map.Entry<SalesPersonProfile, Integer> entry = top3Salespeople.get(i);
            SalesPersonProfile salesperson = entry.getKey();
            int revenue = entry.getValue();

            Object[] rowData = {(i + 1), salesperson.toString(), revenue};
            model.addRow(rowData);
        }

        jTableTopSales.setModel(model);
    }

}
